import telebot
from telebot import types
import sqlite3


bot = telebot.TeleBot('token') # –ø–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É
quiz_bd_info = list()
question_number = 0
score = 0


@bot.message_handler(commands=['start'])
def start_func(message):
    global score, question_number
    question_number = 0
    score = 0
    message_text = """
    –°–µ–≥–æ–¥–Ω—è —Ç—ã —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ\n
    –ü—Ä–∞–≤–∏–ª–∞:\n
    1) –ö–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤ - –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É <b>/go</b> –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ –Ω–∞—á–Ω–µ—Ç—Å—è\n
    2) –ü–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–æ–∫\n
    3) –ü–æ—Å–ª–µ —Ç–≤–æ–µ–≥–æ –≤—ã–±–æ—Ä–∞ –≤–≤–æ–¥–∏ –∫–æ–º–∞–Ω–¥—É <b>/next</b> —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É\n
    4) –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å –ø–æ–∑–æ–≤–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è. –û–Ω —Å–æ–æ–±—â–∏—Ç —Ç–µ–±–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. –£—Å–ø–µ—Ö–æ–≤!\n
    –ì–æ—Ç–æ–≤?(–¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –≤–≤–µ–¥–∏ /go)
    """
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} {message.from_user.last_name}.\n')
    bot.send_message(message.chat.id, message_text, parse_mode='html')


# @bot.message_handler(commands=['go', 'GO', 'Go'])
# def main_body(message):
#     conn = sqlite3.connect('quiz_bd1.sql')
#     cur = conn.cursor()  # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫—É—Ä—Å–æ—Ä —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã –∫ –±–¥
#     cur.execute('SELECT * FROM Quiz')
#     quiz_bd_info = cur.fetchall()  # –≤–µ—Ä–Ω–µ—Ç –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –±–¥
#
#     for info in quiz_bd_info:
#         answers = info[2].split()
#         markup = types.InlineKeyboardMarkup()  # —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è inline –∫–Ω–æ–ø–æ–∫
#         btn1 = types.InlineKeyboardButton(answers[0], callback_data='correct') if answers[0] == info[3] else types.InlineKeyboardButton(answers[0], callback_data='wrong')
#         btn2 = types.InlineKeyboardButton(answers[1], callback_data='correct') if answers[1] == info[3] else types.InlineKeyboardButton(answers[1], callback_data='wrong')
#         btn3 = types.InlineKeyboardButton(answers[2], callback_data='correct') if answers[2] == info[3] else types.InlineKeyboardButton(answers[2], callback_data='wrong')
#         btn4 = types.InlineKeyboardButton(answers[3], callback_data='correct') if answers[3] == info[3] else types.InlineKeyboardButton(answers[3], callback_data='wrong')
#         markup.row(btn1, btn2)
#         markup.row(btn3, btn4)
#         bot.send_message(message.chat.id, info[1], reply_markup=markup)
#         func=lambda callback: True
#         if func == 'correct':
#             score += 1
#
#
#     cur.close()
#     conn.close()
#
#
# @bot.callback_query_handler(func=lambda callback: True)
# def callback_reaction(callback):
#     global score
#     if callback == 'correct':
#         score += 1


@bot.message_handler(commands=['go'])
def first_question(message):
    global quiz_bd_info, question_number
    conn = sqlite3.connect('quiz_bd1.sql')
    cur = conn.cursor()  # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫—É—Ä—Å–æ—Ä —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã –∫ –±–¥
    cur.execute('SELECT * FROM Quiz')
    quiz_bd_info = cur.fetchall()  # –≤–µ—Ä–Ω–µ—Ç –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –±–¥
    answers = quiz_bd_info[question_number][2].split()
    markup = types.InlineKeyboardMarkup()  # —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è inline –∫–Ω–æ–ø–æ–∫
    btn1 = types.InlineKeyboardButton(answers[0], callback_data='correct') if answers[0].lower() == quiz_bd_info[question_number][3].lower() else types.InlineKeyboardButton(answers[0], callback_data='wrong')
    btn2 = types.InlineKeyboardButton(answers[1], callback_data='correct') if answers[1].lower() == quiz_bd_info[question_number][3].lower() else types.InlineKeyboardButton(answers[1], callback_data='wrong')
    btn3 = types.InlineKeyboardButton(answers[2], callback_data='correct') if answers[2].lower() == quiz_bd_info[question_number][3].lower() else types.InlineKeyboardButton(answers[2], callback_data='wrong')
    btn4 = types.InlineKeyboardButton(answers[3], callback_data='correct') if answers[3].lower() == quiz_bd_info[question_number][3].lower() else types.InlineKeyboardButton(answers[3], callback_data='wrong')
    markup.row(btn1, btn2)
    markup.row(btn3, btn4)
    bot.send_message(message.chat.id, quiz_bd_info[question_number][1], reply_markup=markup)
    question_number += 1

@bot.callback_query_handler(func=lambda callback: True)
def first_question_buttons(callback):
    global score
    if callback.data == 'correct':
        bot.send_message(callback.message.chat.id, '–û—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç. –í–≤–µ–¥–∏ /next –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞')
        score += 1
    else:
        bot.send_message(callback.message.chat.id, '–û—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç. –í–≤–µ–¥–∏ /next –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞')


@bot.message_handler(commands=['next'])
def other_questions(message):
    global quiz_bd_info, question_number
    if question_number > len(quiz_bd_info) -1:
        bot.send_message(message.chat.id, '–í–æ–ø—Ä–æ—Å—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –∑–æ–≤–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è üëç')
    else:
        answers = quiz_bd_info[question_number][2].split()
        markup = types.InlineKeyboardMarkup()  # —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è inline –∫–Ω–æ–ø–æ–∫
        btn1 = types.InlineKeyboardButton(answers[0], callback_data='correct') if answers[0].lower() == quiz_bd_info[question_number][3].lower() else types.InlineKeyboardButton(answers[0], callback_data='wrong')
        btn2 = types.InlineKeyboardButton(answers[1], callback_data='correct') if answers[1].lower() == quiz_bd_info[question_number][3].lower() else types.InlineKeyboardButton(answers[1], callback_data='wrong')
        btn3 = types.InlineKeyboardButton(answers[2], callback_data='correct') if answers[2].lower() == quiz_bd_info[question_number][3].lower() else types.InlineKeyboardButton(answers[2], callback_data='wrong')
        btn4 = types.InlineKeyboardButton(answers[3], callback_data='correct') if answers[3].lower() == quiz_bd_info[question_number][3].lower() else types.InlineKeyboardButton(answers[3], callback_data='wrong')
        markup.row(btn1, btn2)
        markup.row(btn3, btn4)
        bot.send_message(message.chat.id, quiz_bd_info[question_number][1], reply_markup=markup)
        question_number += 1


@bot.callback_query_handler(func=lambda callback: True)
def other_question_buttons(callback):
    global score
    if callback.data == 'correct':
        bot.send_message(callback.message.chat.id, '–û—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç. –í–≤–µ–¥–∏ /next –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞')
        score += 1
    else:
        bot.send_message(callback.message.chat.id, '–û—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç. –í–≤–µ–¥–∏ /next –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞')


@bot.message_handler(commands=['result'])
def result(message):
    bot.send_message(message.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, {message.from_user.first_name} {message.from_user.last_name}. –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {score}')


bot.polling(none_stop=True)    # –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —á—Ç–æ–±—ã –±–æ—Ç –ø–æ –∫–¥ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª